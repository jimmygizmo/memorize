
Misc SwiftUI notes
------------------


                // TODO: CONFIRM: It looks like ZStack is painting the components from bottom to top,
                // meaning from the device to the user, while the code itself is the opposite, from
                // top to bottom.

-----------------------
Assign vs. pass as argument for vars inside a View:

struct CardView: View {
    var isFaceUp: Bool
//    var isFaceUp: Bool { return false }  // This is how we would assign/hardcode a value here.
// Since we do not set a vale above, this becomes like a required argument to CardView() since it
// must have a value set by assignment or evaluation here or by passing as an argument.

--------------------------------------
Viewbuilder variants:

//        return ZStack (alignment: .top, content: {    // Longer form. A ) would be after }.
//        ZStack (alignment: .top) {...}    // Another variant. content: implied.
or just ..
    ZStack {
        thing1
        thing2
    }
    .modifier()   // .. etc.

------------------------------------------
Sizing across ALL devices .. case of the emoji as icons. Large iPad will be too small:

                // These icon (font) size and shadow settings were tested on an iPad 12.9 inch simulator
                // and are way too small, so some platform detection and or a different sizing strategy
                // would be needed.
                Text("ðŸšœ").font(.largeTitle)
                    .shadow(color: .black, radius: 26)
                    .shadow(color: .black, radius: 10)

------------------------------------------------
Short vs long version of onTapGesture

        .onTapGesture {
            isFaceUp = !isFaceUp
        }
// Longer version of the onTap:
//        .onTapGesture(perform: {
//            isFaceUp = !isFaceUp
//        })

---------------------------------------
@State

    @State var isFaceUp: Bool
    // The @State decorator changes this boolean variable from a stored value into a pointer
    // and thus the following error is eliminated (triggered from where isFaceUp may be set)
    // ERROR without @State: Cannot assign to property: 'self' is immutable


-----------------------------------































