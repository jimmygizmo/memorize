Reading assignment 1: COMPLETE
https://cs193p.sites.stanford.edu/sites/g/files/sbiybj16636/files/media/file/reading_1.pdf

-- Swift Programming Language Documentation
https://docs.swift.org/swift-book/LanguageGuide/TheBasics.html

Programming assignment 1:
https://cs193p.sites.stanford.edu/sites/g/files/sbiybj16636/files/media/file/assignment_1.pdf

NOTE:
The programming assignement adds quite a lot more on top of the features covered in the lectures 1 and 2.
- Multiple icon sets/themes.
- Randomization/shuffling.
- Using images from the system library (SF Symbol).
- and more

It looks like the reading and programming assignments throughout the entire course are as much as or more work than following along with the lectures, even when repeating them and customizing some of the work along the way and deep diving a few topics. There is a LOT of work in this overall course (Stanford CS193P Srping 2021) and it looks like a lot of great skills will be gained by the end of it.

PROGRAMMING ASSIGNMENT 1 - REQUIRED TASKS
=========================================

DONE - 1. Get the Memorize game working as demonstrated in lectures 1 and 2. Type in all the code. Do not copy/paste from anywhere.

2. You can remove the ⊖ and ⊕ buttons at the bottom of the screen.

DONE - 3. Add a title “Memorize!” to the top of the screen.
ALSO: Initial choice of a font to use in most/all of the game: AmericanTypewriter-Bold

PROGRESS FOR ITEM 4: 3 sets/themes of icons have been prepared with 32 in each. Travel, Food and Animal themes.

4. Add at least 3 “theme choosing” buttons to your UI, each of which causes all of the cards to be replaced with new cards that contain emoji that match the chosen theme. You can use Vehicles from lecture as one of the 3 themes if you want to, but you are welcome to create 3 (or more) completely new themes.

DONE - 5. The number of cards in each of your 3 themes should be different, but in no case fewer than 8.

PROGRESS FOR ITEM 6: This does not need to be coded up. Just use the Array.shuffle() provided by Swift.
6. The cards that appear when a theme button is touched should be in an unpredictable (i.e. random) order. In other words, the cards should be shuffled each time a theme button is chosen.

7. The theme-choosing buttons must include an image representing the theme and text describing the theme stacked on top of each other vertically.

8. The image portion of each of the theme-choosing buttons must be created using an SF Symbol which evokes the idea of the theme it chooses (like the car symbol and the Vehicles theme shown in the Screenshot section below).

9. Thetextdescriptionofthetheme-choosingbuttonsmustuseanoticeablysmallerfont than the font we chose for the emoji on the cards.

10. Your UI should work in portrait or landscape on any iPhone. This probably will not require any work on your part (that’s part of the power of SwiftUI), but be sure to experiment with running on different simulators in Xcode to be sure.




