Create a launch screen:
https://www.appcoda.com/launch-screen-swiftui/

** DEPRECATED? To see message, highlight Assets.xcassets. Default/empty should show unselected options of AccentColor and AppIcon, but you can add more via the plus icon at the bottom of this pane.
PLUS ICON -> iOS -> "iOS Launch Image (Deprecated)"
Looks like maybe the preferred alternative in the latest XCode 12.5.1 is to use:
PLUS ICON -> iOS -> "iOS App Icon"
TODO: Confirm the new way to do a launch/splash image.
** So, the above link might be outdated at this point.

-----------------------------
drop shadow on a view

https://www.hackingwithswift.com/quick-start/swiftui/how-to-draw-a-shadow-around-a-view

----------------------------------
regarding "some View" and Swift's Opaque Return Types:

https://www.hackingwithswift.com/books/ios-swiftui/why-does-swiftui-use-some-view-for-its-view-type
Accompanying video:
https://www.youtube.com/watch?v=SzgxLMUumic

-----------------------------------

Article on the Swift REPL:
https://www.aidanf.net/learn-swift/running_code

-----------------------------------------
Thread discussing Optionals, if let, guard let

https://stackoverflow.com/questions/29662836/swift-use-of-optional-with-let

---------------------------------------
Don't confuse ?? with a Python-style short-circuit operator! ?? Is the NIL-COALESCING (Optional-unwrapping) operator!

https://docs.swift.org/swift-book/LanguageGuide/BasicOperators.html#ID72

---------------------------------------
Comparison of Python to Swift

https://docs.swift.org/swift-book/GuidedTour/GuidedTour.html

-----------------------------------

Clarifying usage of UNDERSCORE: _
A GREAT Stack Overflow thread:

https://stackoverflow.com/questions/39627106/why-do-i-need-underscores-in-swift

Clarifies how it affects labels for function arguments, and disabling the requirement for argument labels when calling.
(Required since Swift 3)

-------------------------------

Tuples - general info. Mentions they are value types not reference types. This is my big question.

https://www.journaldev.com/19515/swift-tuple

-----------------------

Asserts in Swift and Why you Should Be Using Them:
https://medium.com/@alecoconnor/asserts-in-swift-and-why-you-should-be-using-them-6a7c96eaec10

-------------------

It is good to follow multiple related tutorials on a topic to fill in gaps, learn related extras, solidify
memory of information and discover new sources of information. I plan to have a look at this introductory
SwiftUI tut on ScrollView, Shapes, TabBar and SwiftUI basics:
https://www.youtube.com/watch?v=xfOehTZXnYk

----------------

Get really fancy using code to manipulate SF Symbols as masks and do photoshop-stle tricks from CODE!
https://stackoverflow.com/questions/60192357/inverted-mask-swiftui-with-system-image

----------------------

Don't forget how important it is to pick a good set of colors to use in your UI Design.
As with everything, there are a lot of poor sources of info on this topic, but I think this link is
a very good place to start. Quick overview of a handful of formal/traditional design strategies for
picking a color scheme. Quick read, but very interesting. Lots of clear examples.

https://designerup.co/blog/ui-design-choosing-color-palettes/

UPDATE: I read more of this. It is really quite good. Goes into detail on exactly how to apply your color scheme
idea into the parts of the UI design, in particular how you can do it all with different shades of a single
theme color, which is a good way to start and keep the design clean from the get go.

-------------------------

Good info on how to manage different kinds of app constants in structs in multiple constants files:
Look at post by: Anish Parajuli

https://stackoverflow.com/questions/26252233/global-constants-file-in-swift

-----------------------

Candidate for tutorial C:
SwiftUI Tutorial: Build an iBeacon detector with object binding and custom modifiers
https://www.youtube.com/watch?v=lCNpEaZiKqU

-----------------------------

Logging in Swift
https://stevenpcurtis.medium.com/logging-in-swift-d9b59146ff00

---------------------

For testing iBeacons, how to simulate an iBeacon from a Mac, using a command line tool:
https://www.beaconzone.co.uk/blog/make-your-mac-advertise-ibeacon/

----------------------

